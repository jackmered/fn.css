// Padding

@each $breakpoint in map-keys($breakpoints) {
  $infix: breakpoint-infix($breakpoint, $breakpoints);

  @include media-breakpoint-up($breakpoint, $breakpoints) {
    @each $spacer in map-keys($spacers) {
      .#{$infix}p#{$spacer} {
        padding: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}pt#{$spacer} {
        padding-top: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}pr#{$spacer} {
        padding-right: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}pb#{$spacer} {
        padding-bottom: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}pl#{$spacer} {
        padding-left: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}px#{$spacer} {
        padding-left: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
        padding-right: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }

    @each $spacer in map-keys($spacers) {
      .#{$infix}py#{$spacer} {
        padding-top: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
        padding-bottom: calc(var(--fn-spacer) * #{map-get($spacers, $spacer)});
      }
    }
  }
}
